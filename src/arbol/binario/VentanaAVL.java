/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package arbol.binario;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import main.Main;

/**
 *
 * @author wildg
 */
public class VentanaAVL extends javax.swing.JFrame {
    
    private AVL Arbol;
    private int parent2child = 20, child2child = 30;
    private Dimension empty = new Dimension(0,0);
    private FontMetrics fm = null;
    
    /**
     * Creates new form Ventana
     */
    public VentanaAVL() {
        initComponents();
        Arbol = new AVL();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        SalidaTextArea = new javax.swing.JTextArea();
        AddNodeButton = new javax.swing.JButton();
        SearchNodeButton = new javax.swing.JButton();
        PreorderButton = new javax.swing.JButton();
        InorderButton = new javax.swing.JButton();
        PostorderButton = new javax.swing.JButton();
        InfoTextField = new javax.swing.JTextField();
        HeightButton = new javax.swing.JButton();
        CompleteButton = new javax.swing.JButton();
        nLeafsButton = new javax.swing.JButton();
        SizeButton = new javax.swing.JButton();
        DeleteTreeButton = new javax.swing.JButton();
        LevelsButton = new javax.swing.JButton();
        DeleteNodeButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        DrawPanel = new javax.swing.JPanel();
        exitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });

        SalidaTextArea.setColumns(20);
        SalidaTextArea.setRows(5);
        jScrollPane1.setViewportView(SalidaTextArea);

        AddNodeButton.setText("Insertar");
        AddNodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddNodeButtonActionPerformed(evt);
            }
        });

        SearchNodeButton.setText("Buscar elemento");
        SearchNodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchNodeButtonActionPerformed(evt);
            }
        });

        PreorderButton.setText("Preorden");
        PreorderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreorderButtonActionPerformed(evt);
            }
        });

        InorderButton.setText("Inorden");
        InorderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InorderButtonActionPerformed(evt);
            }
        });

        PostorderButton.setText("Postorden");
        PostorderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PostorderButtonActionPerformed(evt);
            }
        });

        InfoTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                InfoTextFieldKeyTyped(evt);
            }
        });

        HeightButton.setText("Altura");
        HeightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HeightButtonActionPerformed(evt);
            }
        });

        CompleteButton.setText("Cantidad nodos completos");
        CompleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompleteButtonActionPerformed(evt);
            }
        });

        nLeafsButton.setText("Cantidad de hojas");
        nLeafsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nLeafsButtonActionPerformed(evt);
            }
        });

        SizeButton.setText("Tama√±o");
        SizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SizeButtonActionPerformed(evt);
            }
        });

        DeleteTreeButton.setText("Borrar Arbol");
        DeleteTreeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteTreeButtonActionPerformed(evt);
            }
        });

        LevelsButton.setText("Por niveles");
        LevelsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LevelsButtonActionPerformed(evt);
            }
        });

        DeleteNodeButton.setText("Borrar");
        DeleteNodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteNodeButtonActionPerformed(evt);
            }
        });

        jScrollPane2.setToolTipText("");
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setPreferredSize(new java.awt.Dimension(850, 467));

        DrawPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        DrawPanel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        DrawPanel.setPreferredSize(new java.awt.Dimension(8000, 452));
        DrawPanel.setVerifyInputWhenFocusTarget(false);
        DrawPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DrawPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DrawPanelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout DrawPanelLayout = new javax.swing.GroupLayout(DrawPanel);
        DrawPanel.setLayout(DrawPanelLayout);
        DrawPanelLayout.setHorizontalGroup(
            DrawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        DrawPanelLayout.setVerticalGroup(
            DrawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 452, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(DrawPanel);

        exitButton.setText("Salir");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(exitButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(InfoTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(SearchNodeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(AddNodeButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(DeleteNodeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CompleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nLeafsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(HeightButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(SizeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(LevelsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(14, 14, 14)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PreorderButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(InorderButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DeleteTreeButton)
                                .addGap(18, 18, 18)
                                .addComponent(PostorderButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InfoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HeightButton)
                            .addComponent(SizeButton)
                            .addComponent(PreorderButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddNodeButton)
                            .addComponent(CompleteButton)
                            .addComponent(DeleteTreeButton)
                            .addComponent(PostorderButton)
                            .addComponent(DeleteNodeButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SearchNodeButton)
                            .addComponent(nLeafsButton)
                            .addComponent(InorderButton)
                            .addComponent(LevelsButton)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void actualizarArbol(Graphics g, int puntox, int puntoy, int yoffs){
        Nodo root = this.Arbol.getRaiz();
        if (root != null){
            dibujarNodo(root, Integer.MAX_VALUE, Integer.MAX_VALUE, 0, g, puntox, puntoy, yoffs);
        }
    }
    
    private void dibujarNodo(Nodo n, int left, int right, int top,Graphics g, int puntox, int puntoy, int yoffs){
        if (n == null) return;
        Dimension ld = (Dimension) calcularTama√±oSubarbol(n.getHizq());
        if (ld == null) ld = empty;

        Dimension rd = (Dimension) calcularTama√±oSubarbol(n.getHder());
        if (rd == null)  rd = empty;

        int center = 0;

        if (right != Integer.MAX_VALUE)
            center = right - rd.width - child2child/2;
        else if (left != Integer.MAX_VALUE)
            center = left + ld.width + child2child/2;
        int width = fm.stringWidth(n.getDato()+"");

        Rectangle r = (Rectangle) new Rectangle(center - width/2 - 3, top, width + 6, fm.getHeight());
        g.setColor(Color.yellow);
        g.fillOval(r.x, r.y, r.width, r.height);
        g.setColor(Color.BLACK);
        g.drawString(n.getDato()+"", r.x + 3, r.y + yoffs);
        if (puntox != Integer.MAX_VALUE)
        g.drawLine(puntox, puntoy, (int)(r.x + r.width/2), r.y);
        
        dibujarNodo(n.getHizq(), Integer.MAX_VALUE, center - child2child/2, top + fm.getHeight() + parent2child,g , (int)(r.x + r.width/2), r.y + r.height, yoffs);
        dibujarNodo(n.getHder(), center + child2child/2, Integer.MAX_VALUE, top + fm.getHeight() + parent2child,g , (int)(r.x + r.width/2), r.y + r.height, yoffs);
    }
    
    private Dimension calcularTama√±oSubarbol(Nodo n){
        if (n == null) return new Dimension(0,0);
        Dimension ld = calcularTama√±oSubarbol(n.getHizq());
        Dimension rd = calcularTama√±oSubarbol(n.getHder());
        int h = fm.getHeight() + parent2child + Math.max(ld.height, rd.height);
        int w = ld.width + child2child + rd.width;
        Dimension d = new Dimension(w, h);
        return d;
    }
    
    private void search(int Elem,Nodo A){
         if (A == null) {
            JOptionPane.showMessageDialog(null, "no se encontr√≥ el nodo");
        } else if (A.getDato() == Elem) {
            JOptionPane.showMessageDialog(null, "Nodo encontrado");
        } else if (Elem > A.getDato()) {
            search(Elem, A.getHder());
        } else {
            search(Elem, A.getHizq());
        }
    }
    
    private void AddNodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddNodeButtonActionPerformed
        // TODO add your handling code here:
        if(InfoTextField.getText().length()>0){
            int info = Integer.parseInt(InfoTextField.getText());
            Arbol.insertarNodo(info);
            /*
            Arbol.borrarArbol();
            int p = (int) Math.pow(2, info);
            System.out.println(p);
            for (int i = 1; i < p; i++) {
                Arbol.insertarNodo(i);
            }
            */
            Rectangle ven = DrawPanel.getBounds();
            int alto = ven.height;
            int ancho = ven.width;
            Graphics g = DrawPanel.getGraphics();
            g.clearRect(ven.x, ven.y, ancho, alto);
            fm = g.getFontMetrics();
            g.translate(ancho /2, parent2child);
            actualizarArbol(g, Integer.MAX_VALUE, Integer.MAX_VALUE, fm.getLeading() + fm.getAscent());
            fm = null;
        }else {
            JOptionPane.showMessageDialog(null, "Ingrese numero");
        }
    }//GEN-LAST:event_AddNodeButtonActionPerformed

    private void SearchNodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchNodeButtonActionPerformed
        // TODO add your handling code here:
        if(InfoTextField.getText().length()>0){
            int info = Integer.parseInt(InfoTextField.getText());
            search(info,Arbol.getRaiz());
        }else {
            JOptionPane.showMessageDialog(null, "Ingrese numero");
        }
    }//GEN-LAST:event_SearchNodeButtonActionPerformed

    private void HeightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HeightButtonActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "La altura del arbol es: "+Arbol.alturaArbol(Arbol.getRaiz()));
    }//GEN-LAST:event_HeightButtonActionPerformed

    private void CompleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompleteButtonActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "La cantidad de nodos completos que posee el arbol es: "+Arbol.cantCompletos(Arbol.getRaiz()));
    }//GEN-LAST:event_CompleteButtonActionPerformed

    private void nLeafsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nLeafsButtonActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "La cantidad de nodos hojas que posee el arbol es: "+Arbol.cantHojas(Arbol.getRaiz()));
    }//GEN-LAST:event_nLeafsButtonActionPerformed

    private void SizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SizeButtonActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "La cantidad de nodos que posee el arbol es: "+Arbol.tama√±oArbol(Arbol.getRaiz()));
        
    }//GEN-LAST:event_SizeButtonActionPerformed

    private void DeleteTreeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteTreeButtonActionPerformed
        // TODO add your handling code here:
        Arbol.borrarArbol();
        Rectangle ven = DrawPanel.getBounds();
        int alto = ven.height;
        int ancho = ven.width;
        Graphics g = DrawPanel.getGraphics();
        g.clearRect(ven.x, ven.y, ancho, alto);
        fm = g.getFontMetrics();
        g.translate(ancho /2, parent2child);
        actualizarArbol(g, Integer.MAX_VALUE, Integer.MAX_VALUE, fm.getLeading() + fm.getAscent());
        fm = null;
        SalidaTextArea.setText("");
    }//GEN-LAST:event_DeleteTreeButtonActionPerformed

    private void LevelsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LevelsButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<Integer> out= new ArrayList();
        Arbol.escNiveles(out);
        SalidaTextArea.setText("Recorrido por niveles: ");
        for (Integer integer : out) {
            SalidaTextArea.setText(SalidaTextArea.getText()+integer+",");
        }
    }//GEN-LAST:event_LevelsButtonActionPerformed

    private void PreorderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreorderButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<Integer> out= new ArrayList();
        Arbol.preorden(Arbol.getRaiz(), out);
        SalidaTextArea.setText("Recorrido preorden: ");
        for (Integer integer : out) {
            SalidaTextArea.setText(SalidaTextArea.getText()+integer+",");
        }
    }//GEN-LAST:event_PreorderButtonActionPerformed

    private void PostorderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PostorderButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<Integer> out= new ArrayList();
        Arbol.postOrden(Arbol.getRaiz(),out);
        SalidaTextArea.setText("Recorrido postorden: ");
        for (Integer integer : out) {
            SalidaTextArea.setText(SalidaTextArea.getText()+integer+",");
        }
    }//GEN-LAST:event_PostorderButtonActionPerformed

    private void InorderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InorderButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<Integer> out= new ArrayList();
        Arbol.inorden(Arbol.getRaiz(),out);
        SalidaTextArea.setText("Recorrido inorden: ");
        for (Integer integer : out) {
            SalidaTextArea.setText(SalidaTextArea.getText()+integer+",");
        }
    }//GEN-LAST:event_InorderButtonActionPerformed

    private void InfoTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InfoTextFieldKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(c == '-'){
            
        }else{
            if(c<'0' || c>'9') evt.consume();
        }
    }//GEN-LAST:event_InfoTextFieldKeyTyped

    private void DeleteNodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteNodeButtonActionPerformed
        // TODO add your handling code here:
        if(InfoTextField.getText().length()>0){
            int info = Integer.parseInt(InfoTextField.getText());
            Arbol.borrarClave(info);
            Rectangle ven = DrawPanel.getBounds();
            int alto = ven.height;
            int ancho = ven.width;
            Graphics g = DrawPanel.getGraphics();
            g.clearRect(ven.x, ven.y, ancho, alto);
            fm = g.getFontMetrics();
            g.translate(ancho /2, parent2child);
            actualizarArbol(g, Integer.MAX_VALUE, Integer.MAX_VALUE, fm.getLeading() + fm.getAscent());
            fm = null;
            SalidaTextArea.setText("");
        }else {
            JOptionPane.showMessageDialog(null, "Ingrese numero");
        }
    }//GEN-LAST:event_DeleteNodeButtonActionPerformed

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here:
        Rectangle ven = DrawPanel.getBounds();
            int alto = ven.height;
            int ancho = ven.width;
            Graphics g = DrawPanel.getGraphics();
            g.clearRect(ven.x, ven.y, ancho, alto);
            fm = g.getFontMetrics();
            g.translate(ancho /2, parent2child);
            actualizarArbol(g, Integer.MAX_VALUE, Integer.MAX_VALUE, fm.getLeading() + fm.getAscent());
            fm = null;
    }//GEN-LAST:event_formMouseEntered

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        // TODO add your handling code here:
        Rectangle ven = DrawPanel.getBounds();
            int alto = ven.height;
            int ancho = ven.width;
            Graphics g = DrawPanel.getGraphics();
            g.clearRect(ven.x, ven.y, ancho, alto);
            fm = g.getFontMetrics();
            g.translate(ancho /2, parent2child);
            actualizarArbol(g, Integer.MAX_VALUE, Integer.MAX_VALUE, fm.getLeading() + fm.getAscent());
            fm = null;
    }//GEN-LAST:event_formMouseExited

    private void DrawPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DrawPanelMouseEntered
        // TODO add your handling code here:
        Rectangle ven = DrawPanel.getBounds();
            int alto = ven.height;
            int ancho = ven.width;
            Graphics g = DrawPanel.getGraphics();
            g.clearRect(ven.x, ven.y, ancho, alto);
            fm = g.getFontMetrics();
            g.translate(ancho /2, parent2child);
            actualizarArbol(g, Integer.MAX_VALUE, Integer.MAX_VALUE, fm.getLeading() + fm.getAscent());
            fm = null;
    }//GEN-LAST:event_DrawPanelMouseEntered

    private void DrawPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DrawPanelMouseExited
        // TODO add your handling code here:
        Rectangle ven = DrawPanel.getBounds();
            int alto = ven.height;
            int ancho = ven.width;
            Graphics g = DrawPanel.getGraphics();
            g.clearRect(ven.x, ven.y, ancho, alto);
            fm = g.getFontMetrics();
            g.translate(ancho /2, parent2child);
            actualizarArbol(g, Integer.MAX_VALUE, Integer.MAX_VALUE, fm.getLeading() + fm.getAscent());
            fm = null;
    }//GEN-LAST:event_DrawPanelMouseExited

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        Main m = new Main();
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_exitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaAVL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaAVL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaAVL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaAVL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaAVL().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddNodeButton;
    private javax.swing.JButton CompleteButton;
    private javax.swing.JButton DeleteNodeButton;
    private javax.swing.JButton DeleteTreeButton;
    private javax.swing.JPanel DrawPanel;
    private javax.swing.JButton HeightButton;
    private javax.swing.JTextField InfoTextField;
    private javax.swing.JButton InorderButton;
    private javax.swing.JButton LevelsButton;
    private javax.swing.JButton PostorderButton;
    private javax.swing.JButton PreorderButton;
    private javax.swing.JTextArea SalidaTextArea;
    private javax.swing.JButton SearchNodeButton;
    private javax.swing.JButton SizeButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton nLeafsButton;
    // End of variables declaration//GEN-END:variables
}